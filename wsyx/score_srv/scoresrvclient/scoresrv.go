// Code generated by goctl. DO NOT EDIT.
// Source: score_srv.proto

package scoresrvclient

import (
	"context"

	"2112a-6/month/wsyx/score_srv/score_srv"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddUserScoreRequest  = score_srv.AddUserScoreRequest
	AddUserScoreResponse = score_srv.AddUserScoreResponse
	Request              = score_srv.Request
	Response             = score_srv.Response

	ScoreSrv interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		AddUserScore(ctx context.Context, in *AddUserScoreRequest, opts ...grpc.CallOption) (*AddUserScoreResponse, error)
		TranInsScore(ctx context.Context, in *AddUserScoreRequest, opts ...grpc.CallOption) (*AddUserScoreResponse, error)
		TranDelScore(ctx context.Context, in *AddUserScoreRequest, opts ...grpc.CallOption) (*AddUserScoreResponse, error)
	}

	defaultScoreSrv struct {
		cli zrpc.Client
	}
)

func NewScoreSrv(cli zrpc.Client) ScoreSrv {
	return &defaultScoreSrv{
		cli: cli,
	}
}

func (m *defaultScoreSrv) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := score_srv.NewScoreSrvClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultScoreSrv) AddUserScore(ctx context.Context, in *AddUserScoreRequest, opts ...grpc.CallOption) (*AddUserScoreResponse, error) {
	client := score_srv.NewScoreSrvClient(m.cli.Conn())
	return client.AddUserScore(ctx, in, opts...)
}

func (m *defaultScoreSrv) TranInsScore(ctx context.Context, in *AddUserScoreRequest, opts ...grpc.CallOption) (*AddUserScoreResponse, error) {
	client := score_srv.NewScoreSrvClient(m.cli.Conn())
	return client.TranInsScore(ctx, in, opts...)
}

func (m *defaultScoreSrv) TranDelScore(ctx context.Context, in *AddUserScoreRequest, opts ...grpc.CallOption) (*AddUserScoreResponse, error) {
	client := score_srv.NewScoreSrvClient(m.cli.Conn())
	return client.TranDelScore(ctx, in, opts...)
}
