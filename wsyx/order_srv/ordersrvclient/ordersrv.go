// Code generated by goctl. DO NOT EDIT.
// Source: order_srv.proto

package ordersrvclient

import (
	"context"

	"2112a-6/month/wsyx/order_srv/order_srv"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddOrderRequest  = order_srv.AddOrderRequest
	AddOrderResponse = order_srv.AddOrderResponse
	Request          = order_srv.Request
	Response         = order_srv.Response

	OrderSrv interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		Order(ctx context.Context, in *AddOrderRequest, opts ...grpc.CallOption) (*AddOrderResponse, error)
		TranInsOrder(ctx context.Context, in *AddOrderRequest, opts ...grpc.CallOption) (*AddOrderResponse, error)
		TranDelOrder(ctx context.Context, in *AddOrderRequest, opts ...grpc.CallOption) (*AddOrderResponse, error)
	}

	defaultOrderSrv struct {
		cli zrpc.Client
	}
)

func NewOrderSrv(cli zrpc.Client) OrderSrv {
	return &defaultOrderSrv{
		cli: cli,
	}
}

func (m *defaultOrderSrv) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := order_srv.NewOrderSrvClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultOrderSrv) Order(ctx context.Context, in *AddOrderRequest, opts ...grpc.CallOption) (*AddOrderResponse, error) {
	client := order_srv.NewOrderSrvClient(m.cli.Conn())
	return client.Order(ctx, in, opts...)
}

func (m *defaultOrderSrv) TranInsOrder(ctx context.Context, in *AddOrderRequest, opts ...grpc.CallOption) (*AddOrderResponse, error) {
	client := order_srv.NewOrderSrvClient(m.cli.Conn())
	return client.TranInsOrder(ctx, in, opts...)
}

func (m *defaultOrderSrv) TranDelOrder(ctx context.Context, in *AddOrderRequest, opts ...grpc.CallOption) (*AddOrderResponse, error) {
	client := order_srv.NewOrderSrvClient(m.cli.Conn())
	return client.TranDelOrder(ctx, in, opts...)
}
